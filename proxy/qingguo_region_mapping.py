#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
青果代理区域映射
根据官方文档：https://www.qg.net/doc/1799.html
"""

# 区域编码映射 - 根据青果代理API返回的数据更新
REGION_MAPPING = {
    # 华北地区
    "北京": "110000",
    "天津市": "120000", 
    "河北省": "130000",
    "山西省": "140000",
    "内蒙古自治区": "150000",
    
    # 东北地区
    "辽宁省": "210000",
    "吉林省": "220000",
    "黑龙江省": "230000",
    
    # 华东地区
    "上海市": "310000",
    "江苏省": "320000",
    "浙江省": "330000",
    "安徽省": "340000",
    "福建省": "350000",
    "江西省": "360000",
    "山东省": "370000",
    
    # 华中地区
    "河南省": "410000",
    "湖北省": "420000",
    "湖南省": "430000",
    
    # 华南地区
    "广东省": "440000",
    "广西壮族自治区": "450000",
    "海南省": "460000",
    
    # 西南地区
    "重庆市": "500000",
    "四川省": "510000",
    "贵州省": "520000",
    "云南省": "530000",
    "西藏自治区": "540000",
    
    # 西北地区
    "陕西省": "610000",
    "甘肃省": "620000",
    "青海省": "630000",
    "宁夏回族自治区": "640000",
    "新疆维吾尔自治区": "650000",
    
    # 港澳台地区
    "香港特别行政区": "810000",
    "澳门特别行政区": "820000",
    "台湾省": "710000",
}

# 运营商映射
ISP_MAPPING = {
    "电信": 0,
    "联通": 1,
    "移动": 2,
    "铁通": 3,
    "教育网": 4,
    "广电": 5,
    "长城": 6,
    "其他": 7,
}

# 常用城市区域编码 - 根据青果代理API返回的数据更新
CITY_MAPPING = {
    # 一线城市
    "北京市市辖区": "110100",
    "上海市市辖区": "310100", 
    "广东省广州市": "440100",
    "广东省深圳市": "440300",
    
    # 新一线城市
    "浙江省杭州市": "330100",
    "江苏省南京市": "320100",
    "四川省成都市": "510100",
    "湖北省武汉市": "420100",
    "陕西省西安市": "610100",
    "重庆市市辖区": "500000",
    "天津市市辖区": "120100",
    "江苏省苏州市": "320500",
    "湖南省长沙市": "430100",
    "河南省郑州市": "410100",
    "山东省青岛市": "370200",
    "辽宁省沈阳市": "210100",
    "浙江省宁波市": "330200",
    "广东省东莞市": "441900",
    "江苏省无锡市": "320200",
    "广东省佛山市": "440600",
    "安徽省合肥市": "340100",
    "辽宁省大连市": "210200",
    "福建省福州市": "350100",
    "福建省厦门市": "350200",
    "黑龙江省哈尔滨市": "230100",
    "山东省济南市": "370100",
    "浙江省温州市": "330300",
    "广西壮族自治区南宁市": "450100",
    "吉林省长春市": "220100",
    "福建省泉州市": "350500",
    "河北省石家庄市": "130100",
    "贵州省贵阳市": "520100",
    "江西省南昌市": "360100",
    "浙江省金华市": "330700",
    "江苏省常州市": "320400",
    "广东省珠海市": "440400",
    "广东省惠州市": "441300",
    "浙江省嘉兴市": "330400",
    "山西省太原市": "140100",
    "广东省中山市": "442000",
    "河北省保定市": "130600",
    "浙江省台州市": "331000",
    "山东省烟台市": "370600",
    "河北省廊坊市": "131000",
    "江苏省南通市": "320600",
    "江苏省扬州市": "321000",
    "河南省洛阳市": "410300",
    "江苏省镇江市": "321100",
    "广西壮族自治区桂林市": "450300",
    "河北省唐山市": "130200",
    "海南省三亚市": "460200",
    "浙江省湖州市": "330500",
    "江苏省盐城市": "320900",
    "山东省济宁市": "370800",
    "广西壮族自治区柳州市": "450200",
    "江苏省泰州市": "321200",
    "福建省漳州市": "350600",
    "河北省邯郸市": "130400",
    "广东省江门市": "440700",
    "安徽省芜湖市": "340200",
    "广东省揭阳市": "445200",
    "陕西省咸阳市": "610400",
    "江苏省连云港市": "320700",
    "广东省茂名市": "440900",
    "江苏省淮安市": "320800",
    "广东省湛江市": "440800",
    "福建省莆田市": "350300",
    "江西省上饶市": "361100",
    "江西省赣州市": "360700",
    "贵州省遵义市": "520300",
    "广东省清远市": "441800",
    "河南省新乡市": "410700",
    "广东省肇庆市": "441200",
    "湖南省岳阳市": "430600",
    "河南省安阳市": "410500",
    "湖南省衡阳市": "430400",
    "江西省宜春市": "360900",
    "福建省宁德市": "350900",
    "江西省吉安市": "360800",
    "湖南省株洲市": "430200",
    "河北省邢台市": "130500",
    "广东省汕头市": "440500",
    "广东省潮州市": "445100",
    "浙江省衢州市": "330800",
    "浙江省舟山市": "330900",
    "浙江省丽水市": "331100",
    "江苏省宿迁市": "321300",
    "江苏省徐州市": "320300",
    "安徽省淮北市": "340600",
    "安徽省铜陵市": "340700",
    "安徽省安庆市": "340800",
    "安徽省黄山市": "341000",
    "安徽省滁州市": "341100",
    "安徽省阜阳市": "341200",
    "安徽省宿州市": "341300",
    "安徽省六安市": "341500",
    "安徽省亳州市": "341600",
    "安徽省池州市": "341700",
    "安徽省宣城市": "341800",
    "福建省三明市": "350400",
    "福建省南平市": "350700",
    "福建省龙岩市": "350800",
    "江西省景德镇市": "360200",
    "江西省萍乡市": "360300",
    "江西省九江市": "360400",
    "江西省新余市": "360500",
    "江西省鹰潭市": "360600",
    "江西省抚州市": "361000",
    "山东省淄博市": "370300",
    "山东省枣庄市": "370400",
    "山东省东营市": "370500",
    "山东省潍坊市": "370700",
    "山东省泰安市": "370900",
    "山东省威海市": "371000",
    "山东省日照市": "371100",
    "山东省莱芜市": "371200",
    "山东省临沂市": "371300",
    "山东省德州市": "371400",
    "山东省聊城市": "371500",
    "山东省滨州市": "371600",
    "山东省菏泽市": "371700",
}

def get_region_code(region_name: str) -> str:
    """
    获取区域编码
    
    Args:
        region_name: 区域名称（省份或城市）
        
    Returns:
        区域编码，如果找不到返回北京的编码
    """
    # 处理简化的区域名称（如"北京"、"上海"等）
    simplified_mapping = {
        "北京": "北京市市辖区",
        "上海": "上海市市辖区",
        "广州": "广东省广州市",
        "深圳": "广东省深圳市",
        "杭州": "浙江省杭州市",
        "南京": "江苏省南京市",
        "成都": "四川省成都市",
        "武汉": "湖北省武汉市",
        "西安": "陕西省西安市",
        "重庆": "重庆市市辖区",
        "天津": "天津市市辖区",
        "苏州": "江苏省苏州市",
        "长沙": "湖南省长沙市",
        "郑州": "河南省郑州市",
        "青岛": "山东省青岛市",
        "沈阳": "辽宁省沈阳市",
        "宁波": "浙江省宁波市",
        "东莞": "广东省东莞市",
        "无锡": "江苏省无锡市",
        "佛山": "广东省佛山市",
        "合肥": "安徽省合肥市",
        "大连": "辽宁省大连市",
        "福州": "福建省福州市",
        "厦门": "福建省厦门市",
        "哈尔滨": "黑龙江省哈尔滨市",
        "济南": "山东省济南市",
        "温州": "浙江省温州市",
        "南宁": "广西壮族自治区南宁市",
        "长春": "吉林省长春市",
        "泉州": "福建省泉州市",
        "石家庄": "河北省石家庄市",
        "贵阳": "贵州省贵阳市",
        "南昌": "江西省南昌市",
        "金华": "浙江省金华市",
        "常州": "江苏省常州市",
        "珠海": "广东省珠海市",
        "惠州": "广东省惠州市",
        "嘉兴": "浙江省嘉兴市",
        "太原": "山西省太原市",
        "中山": "广东省中山市",
        "保定": "河北省保定市",
        "台州": "浙江省台州市",
        "烟台": "山东省烟台市",
        "廊坊": "河北省廊坊市",
        "南通": "江苏省南通市",
        "扬州": "江苏省扬州市",
        "洛阳": "河南省洛阳市",
        "镇江": "江苏省镇江市",
        "桂林": "广西壮族自治区桂林市",
        "唐山": "河北省唐山市",
        "三亚": "海南省三亚市",
        "湖州": "浙江省湖州市",
        "盐城": "江苏省盐城市",
        "济宁": "山东省济宁市",
        "柳州": "广西壮族自治区柳州市",
        "泰州": "江苏省泰州市",
        "漳州": "福建省漳州市",
        "邯郸": "河北省邯郸市",
        "江门": "广东省江门市",
        "芜湖": "安徽省芜湖市",
        "揭阳": "广东省揭阳市",
        "咸阳": "陕西省咸阳市",
        "连云港": "江苏省连云港市",
        "茂名": "广东省茂名市",
        "淮安": "江苏省淮安市",
        "湛江": "广东省湛江市",
        "莆田": "福建省莆田市",
        "上饶": "江西省上饶市",
        "赣州": "江西省赣州市",
        "遵义": "贵州省遵义市",
        "清远": "广东省清远市",
        "新乡": "河南省新乡市",
        "肇庆": "广东省肇庆市",
        "岳阳": "湖南省岳阳市",
        "安阳": "河南省安阳市",
        "衡阳": "湖南省衡阳市",
        "宜春": "江西省宜春市",
        "宁德": "福建省宁德市",
        "吉安": "江西省吉安市",
        "株洲": "湖南省株洲市",
        "邢台": "河北省邢台市",
        "汕头": "广东省汕头市",
        "潮州": "广东省潮州市",
        "衢州": "浙江省衢州市",
        "舟山": "浙江省舟山市",
        "丽水": "浙江省丽水市",
        "宿迁": "江苏省宿迁市",
        "徐州": "江苏省徐州市",
        "淮北": "安徽省淮北市",
        "铜陵": "安徽省铜陵市",
        "安庆": "安徽省安庆市",
        "黄山": "安徽省黄山市",
        "滁州": "安徽省滁州市",
        "阜阳": "安徽省阜阳市",
        "宿州": "安徽省宿州市",
        "六安": "安徽省六安市",
        "亳州": "安徽省亳州市",
        "池州": "安徽省池州市",
        "宣城": "安徽省宣城市",
        "三明": "福建省三明市",
        "南平": "福建省南平市",
        "龙岩": "福建省龙岩市",
        "景德镇": "江西省景德镇市",
        "萍乡": "江西省萍乡市",
        "九江": "江西省九江市",
        "新余": "江西省新余市",
        "鹰潭": "江西省鹰潭市",
        "抚州": "江西省抚州市",
        "淄博": "山东省淄博市",
        "枣庄": "山东省枣庄市",
        "东营": "山东省东营市",
        "潍坊": "山东省潍坊市",
        "泰安": "山东省泰安市",
        "威海": "山东省威海市",
        "日照": "山东省日照市",
        "莱芜": "山东省莱芜市",
        "临沂": "山东省临沂市",
        "德州": "山东省德州市",
        "聊城": "山东省聊城市",
        "滨州": "山东省滨州市",
        "菏泽": "山东省菏泽市",
    }
    
    # 先查找简化的区域名称
    if region_name in simplified_mapping:
        region_name = simplified_mapping[region_name]
    
    # 先查找城市
    if region_name in CITY_MAPPING:
        return CITY_MAPPING[region_name]
    
    # 再查找省份
    if region_name in REGION_MAPPING:
        return REGION_MAPPING[region_name]
    
    # 默认返回北京
    return "110100"

def get_isp_code(isp_name: str) -> int:
    """
    获取运营商编码
    
    Args:
        isp_name: 运营商名称
        
    Returns:
        运营商编码，如果找不到返回0（电信）
    """
    return ISP_MAPPING.get(isp_name, 0)

def get_available_regions() -> dict:
    """
    获取所有可用区域
    
    Returns:
        包含省份和城市的字典
    """
    return {
        "provinces": REGION_MAPPING,
        "cities": CITY_MAPPING
    }

def get_available_isps() -> dict:
    """
    获取所有可用运营商
    
    Returns:
        运营商映射字典
    """
    return ISP_MAPPING

# 常用区域组合
COMMON_REGIONS = {
    "北京": "110000",
    "上海": "310000", 
    "广州": "440100",
    "深圳": "440300",
    "杭州": "330100",
    "南京": "320100",
    "成都": "510100",
    "武汉": "420100",
    "西安": "610100",
    "重庆": "500000",
    "天津": "120000",
    "苏州": "320500",
    "长沙": "430100",
    "郑州": "410100",
    "青岛": "370200",
    "沈阳": "210100",
    "宁波": "330200",
    "东莞": "441900",
    "无锡": "320200",
    "佛山": "440600",
}

if __name__ == "__main__":
    # 测试区域映射
    print("青果代理区域映射测试")
    print("=" * 50)
    
    test_regions = ["北京", "上海", "广州", "深圳", "杭州"]
    for region in test_regions:
        code = get_region_code(region)
        print(f"{region}: {code}")
    
    print("\n运营商映射测试")
    print("=" * 50)
    test_isps = ["电信", "联通", "移动"]
    for isp in test_isps:
        code = get_isp_code(isp)
        print(f"{isp}: {code}")
